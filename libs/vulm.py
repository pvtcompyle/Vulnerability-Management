from colorama import Style
import pandas as pd
import re
import os
import glob
def getcsv():
    extension = 'csv'
    files = glob.glob('*.{}'.format(extension))
    return(files)
def consolidatescans(files, scandate, resultsdir, outfile):
    for f in files:
        print(Style.DIM + '     Processing: ', f)
        scantype = re.search('(.*?)_Scan', f).group(1)
        data = pd.read_csv(f, sep=',')
        if f==files[0]:
            data.insert(0, "ScanType", scantype, allow_duplicates=True)
            data.insert(1, "ScanDate", scandate, allow_duplicates=True)
            data.to_csv(outfile, sep=',', index=False)
        else:
            data.insert(0, "ScanType", scantype, allow_duplicates=True)
            data.insert(1, "ScanDate", scandate, allow_duplicates=True)        
            data.to_csv(outfile, mode='a', sep=',', header=False, index=False)
    print(Style.RESET_ALL)
    print('Consolidation Complete')
def avgfield(file, field):
    data = pd.read_csv(file, sep=',')
    return(round(data['CVSS'].mean(),3))
def parsetrash(pfile):
    print(Style.DIM + '     Parsing results to exclude Low and Informational vulnerabilities...')
    data = pd.read_csv(pfile, sep=',')
    data = data[data['CVSS'] > 3.9]
    data = data.sort_values(['Host', 'CVSS'], ascending=[True, False])
    data.to_csv(pfile, sep=',', index=False)
    print('     Trash results below Medium are parsed. ')
    print(Style.RESET_ALL)
def seperatehosts(file, dir):
    data_frame = pd.read_csv(file)
    hosts = data_frame['Host'].unique()
    hostcount = countinstance(file, 'Host')
    tick=0
    for h in hosts:
        tick += 1
        current = int((tick/hostcount)*100)
        current = str(current)+'%'
        result = data_frame[data_frame['Host'].str.match(h)]
        hostfile = 'results\\hosts\\' + h + '.csv'
        hostfile = os.path.join(dir, hostfile)
        print(Style.DIM + current, 'complete.', '     Processing ', hostfile)
        result.to_csv(hostfile, sep=',', index=False)
    print(Style.RESET_ALL)
    print('Hosts have been seperated into individual files.')
    return(hosts)
def countinstance(file, field):
    import pandas as pd
    data_frame = pd.read_csv(file)
    hosts = data_frame[field].unique()
    hostcount = len(hosts)
    return (hostcount)
def gettoday():
    import datetime
    today=datetime.date.today()
    month = int(today.strftime("%m"))-1
    month = str(month).zfill(2)
    scandate= ''.join([str(today.strftime("%Y-")),month])
    return(scandate)
def summary(hosts, dir):
    for h in hosts:
        hostname = h + '.csv'
        host = os.path.join(dir, hostname)
        avg = avgfield(host, 'CVSS')
        print(Style.DIM + h, ': ', avg)
    print(Style.RESET_ALL)